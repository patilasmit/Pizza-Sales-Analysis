create database pizzahut;
use pizzahut;
create table orders(
order_id int not null,
order_date date not null,
order_time time not null,
primary key (order_id));


create table order_details(
order_details_id int not null,
order_id int not null,
pizza_id text not null,
quantity int not null,
primary key (order_id));


select * from orders;
select * from order_details;
select * from pizza_types;
select * from pizzas;

select size , sum(price) as total_pizzas
from pizzas
group by size
order by total_pizzas desc;


--Calculate the total revenue generated from pizza sales.
select round(sum(order_details.quantity * pizzas.price),2) as total_revenue
from order_details
join pizzas on pizzas.pizza_id = order_details.pizza_id 
order by total_revenue desc

--Retrieve the total number of orders placed.
select count(order_id) as total_orders from orders 

--Identify the highest-priced pizza.
select pizza_types.name , pizzas.price
from pizza_types
join pizzas on pizzas.pizza_type_id = pizza_types.pizza_type_id
order by pizzas.price desc
limit 1 ;

--Identify the most common pizza size ordered.
select count(order_details.order_details_id) as most_ordered , pizzas.size
from pizzas
join order_details on pizzas.pizza_id = order_details.pizza_id
group by pizzas.size
order by most_ordered desc 
limit 1;

--List the top 5 most ordered pizza types along with their quantities.

select pizza_types.name ,sum(order_details.quantity) as top_most
from pizza_types
join pizzas on pizza_types.pizza_type_id = pizzas.pizza_type_id
join order_details on order_details.pizza_id = pizzas.pizza_id
group by pizza_types.name
order by top_most desc
limit 5

--Join the necessary tables to find the total quantity of each pizza ordered.
select sum(order_details.quantity) as total_quantity, pizza_types.name
from pizza_types
join pizzas on pizza_types.pizza_type_id = pizzas.pizza_type_id
join order_details on order_details.pizza_id = pizzas.pizza_id
group by pizza_types.name
order by total_quantity desc


--Join the necessary tables to find the total quantity of each pizza category.
select  pizza_types.category , sum(order_details.quantity) as total_quantity
from pizza_types
join pizzas on pizza_types.pizza_type_id = pizzas.pizza_type_id
join order_details on order_details.pizza_id = pizzas.pizza_id
group by pizza_types.category
order by total_quantity desc

--Join relevant tables to find the category-wise distribution of pizzas.
select category , count(name) as distribution
from pizza_types
group by category

--Determine the top 3 most ordered pizza types based on revenue.
select sum(order_details.quantity * pizzas.price) as total_revenue , pizza_types.name
from pizza_types
join pizzas on pizza_types.pizza_type_id = pizzas.pizza_type_id
join order_details on pizzas.pizza_id = order_details.pizza_id
group by pizza_types.name 
order by total_revenue desc
limit 3;

--Group the orders by date and calculate the average number of pizzas ordered per day.
select orders.order_date , avg(order_details.quantity) as order__per_day
from orders
join order_details on order_details.order_id = orders.order_id
group by orders.order_date
order by order__per_day desc

--Calculate the percentage contribution of each pizza type to total revenue.
select sum(order_details.quantity * pizzas.price * 100 )as total_revenue , pizza_types.name
from pizza_types
join pizzas on pizza_types.pizza_type_id = pizzas.pizza_type_id
join order_details on pizzas.pizza_id = order_details.pizza_id
group by pizza_types.name 
order by total_revenue desc

--Determine the top 3 most ordered pizza types based on revenue for each pizza category.
select pizza_types.category , pizza_types.name,
sum(order_details.quantity * pizzas.price) as revenue
from pizza_types
join pizzas on pizza_types.pizza_type_id = pizzas.pizza_type_id
join order_details on  order_details.pizza_id = pizzas.pizza_id
group by pizza_types.category , pizza_types.name
order by revenue desc
limit 3;
